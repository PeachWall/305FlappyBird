library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.math_real.all;
use work.util.all;

entity fsm is
  port
  (
    clk        : in std_logic;
    reset      : in std_logic;
    button     : in std_logic; -- test for fsm
    bird_state : out std_logic_vector
  );
end entity fsm;

architecture rtl of fsm is
  component timer_25 is
    port
    (
      clk, reset, enable : in std_logic;
      seconds            : out std_logic_vector(4 downto 0)
    );
  end component;
  signal cur_bird_state : player_state := NORMAL;
  signal timer_enable   : std_logic;
  signal timer_reset    : std_logic;
  signal timer_seconds  : std_logic_vector(4 downto 0);
begin
  bird_state <= player_state_to_std_logic_vector(cur_bird_state);

  cur_bird_state <= BIG when button = '1' else
    NORMAL;

  process (cur_bird_state)
  begin
  end process;

  TIMER : timer_25
  port map
  (
    clk     => clk,
    reset   => timer_reset,
    enable  => timer_enable,
    seconds => timer_seconds
  );
end architecture;